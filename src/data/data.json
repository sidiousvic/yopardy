[
  {
    "name": "JS",
    "questions": [
      {
        "value": 100,
        "question": "The mechanism that allows for a function call to be written before its declaration.",
        "answer": "hoisting"
      },
      {
        "value": 200,
        "question": "The context in which values are visible or can be referenced.",
        "answer": "scope"
      },
      {
        "value": 300,
        "question": "This is JavaScript's inheritance model.",
        "answer": "Prototypal inheritance"
      },
      {
        "value": 400,
        "question": "The combination of a function with reference to its lexical environment.",
        "answer": "Closure"
      },
      {
        "value": 500,
        "question": "A subscription model in which objects subscribe to an event and get notified when the event occurs.",
        "answer": "Observer pattern"
      }
    ]
  },
  {
    "name": "CS",
    "questions": [
      {
        "value": 100,
        "question": "The repetition of a sequence of computer instructions a specified number of times or until a condition is met.",
        "answer": "loop"
      },
      {
        "value": 200,
        "question": "Time required for a function to execute based on its input size.",
        "answer": "Time complexity"
      },
      {
        "value": 300,
        "question": "A function or algorithm that calls itself one or more times until a specified condition is met.",
        "answer": "Recursion"
      },
      {
        "value": 400,
        "question": "A form of automatic memory management which reclaims memory occupied by objects that are no longer in use by the program.",
        "answer": "Garbage collection"
      },
      {
        "value": 500,
        "question": "In this data structure, for any given node C, if P is a parent node of C, then the key (the value) of P is greater than or equal to the key of C.",
        "answer": "Heap"
      }
    ]
  },
  {
    "name": "BACKEND",
    "questions": [
      {
        "value": 100,
        "question": "Computer program or a device that provides functionality for other programs or devices, called \"clients\".",
        "answer": "Server"
      },
      {
        "value": 200,
        "question": "An application layer protocol for distributed, collaborative, hypermedia information systems.",
        "answer": "HTTP"
      },
      {
        "value": 300,
        "question": "A small piece of data sent from a website and stored on the user's computer by the user's web browser while the user is browsing.",
        "answer": "Cookie"
      },
      {
        "value": 400,
        "question": "Refers to the management of incremental, reversible changes and version control for relational database schemas.",
        "answer": "Schema migration"
      },
      {
        "value": 500,
        "question": "A device that acts as a reverse proxy and distributes network or application traffic across a number of servers.",
        "answer": "Load Balancer"
      }
    ]
  },
  {
    "name": "FRONTEND",
    "questions": [
      {
        "value": 100,
        "question": "The API to a webpage, allowing programs to read and manipulate the page content, structure, and styles.",
        "answer": "DOM"
      },
      {
        "value": 200,
        "question": "Describes all HTML elements, and includes content, padding, border and margin.",
        "answer": "The CSS box model"
      },
      {
        "value": 300,
        "question": "Elements that clearly describe their meaning to both the browser and the developer, as well as providing enhanced accessibility.",
        "answer": "Semantic elements"
      },
      {
        "value": 400,
        "question": "A React hook which serves the same purpose as componentDidMount, componentDidUpdate, and componentWillUnmount did in classâ€”based React, but unified into a single API.",
        "answer": "useEffect"
      },
      {
        "value": 500,
        "question": "A JavaScript API for rendering interactive 2D and 3D graphics within any compatible web browser.",
        "answer": "WebGL"
      }
    ]
  },
  {
    "name": "CI/CD",
    "questions": [
      {
        "value": 100,
        "question": "A software development practice where members of a team combine their work frequently.",
        "answer": "Continuous Integration"
      },
      {
        "value": 200,
        "question": "It advocates adaptive planning, evolutionary development, early delivery, and continual improvement, and it encourages rapid and flexible response to change.",
        "answer": "Agile"
      },
      {
        "value": 300,
        "question": "Used to help a product manager (and others in the organization involved with the product's development) understand key traits, behaviors, goals, responsibilities, and needs of a specific type of user.",
        "answer": "Persona"
      },
      {
        "value": 400,
        "question": "The process of taking code from version control and making it readily available to users of your application in an automated fashion.",
        "answer": "Deployment pipeline"
      },
      {
        "value": 500,
        "question": "Factor (from XII Factors) in which a developer resists the urge to use different backing services between development and production.",
        "answer": "Dev/Prod Parity"
      }
    ]
  }
]
